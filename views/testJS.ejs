
    <div class="container">
      <div class="row" style="outline: 2px dashed grey;">
        <div class="col-md-12">
          <h3>Kysymykset:{{data.kysymystenMaara}} - Pelityyppi:{{ data.peliTyyppi }} - Vaikeusaste:{{data.vaikeusAste}}  {{data.nakyvissa}}
            <span class="glyphicon glyphicon-arrow-down" ng-hide="data.nakyvissa" ng-click="nayta(1)"></span>
            <span class="glyphicon glyphicon-arrow-up" ng-show="data.nakyvissa" ng-click="nayta(0)"></span>
          </h3>
        </div>
        <div class="row">            
          <div class="container" ng-show="data.nakyvissa">
            <div ng-repeat="data2 in data.kysymykset" style="outline: 1px dashed grey;">
                <div class="row">
                    <div class="col-md-10">
                      <h4><b>{{data2.monesko}}</b>. {{data2.kysymysTeksti }}</h4>
                    </div>
                    <div class="col-md-2 pull-right">
                    <h4>
                        <span class="glyphicon glyphicon-ok pull-center" ng-show="data2.oikein" style="color:green;display:block"></span>
                        <span class="glyphicon glyphicon-remove pull-center" ng-hide="data2.oikein" style="color:red"></span>
                    </h4>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-10">
                    <h4>
                        Vastasit: {{data2.vastaus}}. Oikea vastaus {{data2.oikeaVastaus}}.
                    </h4>
                    </div>
                </div>
            </div> 
          </div>
        </div>
      </div>
    </div>


<!--
<html ng-app="myApp">
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});
</script>
<script type="text/javascript" async
  src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_CHTML">
</script>


<body ng-controller="bc">
    <input type="button" ng-click="mutate()" value="Paina"></input>
    <span mathjax-bind="expression"></span>
    <span oma-bind="expression"></span>
    $$\sqrt{4}$$
    
    \frac{5}{6}
    \\frac{5}{6}
    
    When $a \ne 0$, there are two solutions to \(ax^2 + bx + c = 0\) and they are
$$x = {-b \pm \sqrt{b^2-4ac} \over 2a}.$$


</body>

<script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
<!--
<script type="text/javascript"
  src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

<script>
    
var myApp = angular.module('myApp',[]);
    myApp.controller('bc',function($scope){
        $scope.mutate = function(){ $scope.expression = "\\frac{3}{7}"; }
})

myApp.directive("omaBind", function() {
    return {
        restrict: "A",
        controller: ["$scope", "$element", "$attrs", function($scope, $element, $attrs) {
            console.log("¤¤>$attrs.omaBind");
            console.dir($attrs.omaBind);
            
            $scope.$watch($attrs.omaBind, function(value) {
                console.log("¤¤omaBind:value="+value)
                var $script = angular.element("<script type='math/tex'>")
                    .html(value == undefined ? "" : value);
                console.log("¤¤>$script");
                console.dir($script);
                $element.html("");
                $element.append($script);
                console.log("¤¤>elementissa");
                console.dir($element);
                console.log("¤¤>elementissa[0]");
                console.dir($element[0]);
 //               MathJax.Hub.Queue(["Reprocess", MathJax.Hub, $element[0]]);
            });
        }]
    };
});    

myApp.directive("mathjaxBind", function() {
    return {
        restrict: "A",
        controller: ["$scope", "$element", "$attrs", function($scope, $element, $attrs) {
            console.log("¤¤>$attrs.mathjaxBind");
            console.dir($attrs.mathjaxBind);
            
            $scope.$watch($attrs.mathjaxBind, function(value) {
                console.log("¤¤mathjaxBind:value="+value)
                var $script = angular.element("<script type='math/tex'>")
                    .html(value == undefined ? "" : value);
                console.log("¤¤>$script");
                console.dir($script);
                $element.html("");
                $element.append($script);
                console.log("¤¤>elementissa");
                console.dir($element);
                console.log("¤¤>elementissa[0]");
                console.dir($element[0]);
                MathJax.Hub.Queue(["Reprocess", MathJax.Hub, $element[0]]);
            });
        }]
    };
});    

//MathJax.Hub.Queue(["Typeset",MathJax.Hub]);
</script>

<script>
    /*
(function(window){
     var roomalaiset =[
                        ["","I","II","III","IV","V","VI","VII","VIII","IX"],
                        ["","X","XX","XXX","XL","L","LX","LXX","LXXX","XC"],
                       ["","C","CC","CCC","CD","D","DC","DCC","DCCC","CM"],
                       ["","M","MM","MMM","MT","T","TM","TMM","TMMM"],
                    ]; 
    // Function Constructor  
    var Kysymys = function(taso){
        
        this.kysymys = {
                kenelle:"Matille",          
                tabletinVahvuus:600,
                antoAjanKohta:"päivässä",
                laakeKerroin:3,         // 600*3 = 1800 
                paivaKerroin:2,         // kahdesti päivässä 
                paivanAikanaTabletteja:function(){return this.paivaKerroin*this.laakeKerroin;}, 
                maarattyAnnos:function(){return this.tabletinVahvuus*this.laakeKerroin;},
            //  tablettiKerroin:0,
                tablettienKplNumeroina:50, tablettienKplRoomalaisilla:function(){return $scope.muunnaDesimaaleiksi(this.tablettienKplNumeroina).tulos},
                vastaus:function(){return this.tablettienKplNumeroina/(this.laakeKerroin*this.paivaKerroin);},
                vastausFloor:function(){return Math.floor(this.vastaus());} 
            };

        this.asetukset = {
            taso: 1,
            maksimi : 10,
            suhde : function() { return this.taso/this.maksimi }
        }
        this.asetukset.taso = taso || 1;
    }
    
}(window));
/*
    Kysymys.prototype.asetaTaso = function(suhde){
        this.asetukset.taso = suhde * this.maksimi;
    }
    
    Kysymys.prototype.tarkistaVastaus = function(vastaus) {
        var oikeaVastaus = Math.round(this.kysymys.mantissa * Math.pow(10,this.kysymys.eksponentti-this.kysymys.kysyttyEksponentti) * 1000000)/1000000;
        console.log("Oikea vastaus on:"+oikeaVastaus)
        if( vastaus === Math.round(this.kysymys.mantissa * Math.pow(10,this.kysymys.eksponentti-this.kysymys.kysyttyEksponentti) * 1000000)/1000000 ) {
            return true;
        }
        else{
            return  false;
        }
    }
    
    Kysymys.prototype.esitaSelitys = function(){
        "use strict";
        var selitys = "";
        var intialainen = [];
        var roomalainen = [];
        for(var i = 0; i < this.kysymys.luvut.length; i++){
            if( this.kysymys.luvut[i] ){
                selitys = selitys + 
                          roomalaiset[3-i][this.kysymys.luvut[i]] + 
                          " on " + 
                          this.kysymys.luvut[i] * Math.pow(10,3-i) +
                          "<br />"; 
                 intialainen.push(this.kysymys.luvut[i] * Math.pow(10,3-i));
                 roomalainen.push(roomalaiset[3-i][this.kysymys.luvut[i]])
            }    
        }
        selitys += "<br/>";
        
        for(var i = 0; i < intialainen.length; i++){
            console.log("DEBUG i="+i+" length="+intialainen.length)
            if( i + 1 !== intialainen.length ){
                selitys = selitys + intialainen[i] + " + ";
            }
            else{
                selitys = selitys + intialainen[i] + " = ";
            }
        }
        selitys += this.kysymys.luku;
        selitys = "<br />" + this.kysymys.roomalaisina + ":ssä <br /> " + selitys + "<br />";
        return selitys;
       
    }
    
    Kysymys.prototype.esitaKysymys = function(){
       var palautus = this.kysymys.kenelle + " on määrätty " + kysymys.maarattyAnnos() + " mg " + 
       kysymys.antoAjanKohta + ". Tabletin vahvuus on " + kysymys.tabletinVahvuus + " mg ja niitä on määrätty " +
       kysymys.tablettienKplRoomalaisilla() + ". <br/> Kuinka monta päivää kuuri kestää?";
        return palautus;
    }
    
    Kysymys.prototype.oikeaVastaus = function(){
        return this.kysymys.vastaus();
    }
        
    
    Kysymys.prototype.luoKysymys = function(vaikeus,edellinenVastaus) {
        var kysymys = this.kysymys;
        console.log("Vanha vastaus oli:"+edellinenVastaus)
        console.log("Vaikeustaso on:"+vaikeus)
        
        var kuka = ["Potilaalle","Matille","Liisalle","Kalervolle","Ainolle"];
        var arpa = arvoN(kuka.length) - 1;
        kysymys.kenelle = kuka[arpa]
        
        var annostus = 1;
        //var arvoN(20) * 10;
        
        arpa = vaikeus;// arvoN(4);
        
        var varmistin = 0;
        var antoMahdollisuudet = [[],
            ["kerran päivässä"," x 1","aamuisin","iltaisin"],
            [" x 2","kahdesti päivässä","aamulla ja illalla"],
            ["kolme kertaa päivässä"," x 3","kolmesti päivässä"]
            ];

        
        do
        {
            arpa = vaikeus;
            console.log("Vaikeustaso on:"+vaikeus)
            
            // Helpoin taso
            // Tablettien määrä = päivien määrä
            if( arpa === 1 ){ 
                kysymys.laakeKerroin = 1;arvoN(3);
                kysymys.paivaKerroin = 1;
            //    var antoMahdollisuudet = ["kerran päivässä","1x1","aamuisin","iltaisin"];
                arpa = arvoN(antoMahdollisuudet[kysymys.paivaKerroin].length) - 1; // arvotaan yksi ylemmistä
                kysymys.antoAjanKohta = antoMahdollisuudet[arpa]; // asetetaan se
                var laakeMahdollisuudet = [50,100,200,400];
                arpa = arvoN(laakeMahdollisuudet.length) - 1;
                kysymys.tabletinVahvuus = laakeMahdollisuudet[arpa];
                arpa = arvoN(10)*10;
                kysymys.tablettienKplNumeroina = kysymys.laakeKerroin * kysymys.paivaKerroin * arpa;
            // 
            }
            // Toiseksi Helpoin taso
            // Tablettien määrä = päivien määrä
            // Kesto on tasa viikkoja => 7 * Rand(1 - 8)
            else if( arpa === 2 ){ 
                kysymys.laakeKerroin = 1;arvoN(3);
                kysymys.paivaKerroin = 1;
                //var antoMahdollisuudet = ["kerran päivässä","1x1","aamuisin","iltaisin"];
                //arpa = arvoN(antoMahdollisuudet.length) - 1; // arvotaan yksi ylemmistä
                //kysymys.antoAjanKohta = antoMahdollisuudet[arpa]; // asetetaan se
                var laakeMahdollisuudet = [50,100,200,400];
                arpa = arvoN(laakeMahdollisuudet.length) - 1;
                kysymys.tabletinVahvuus = laakeMahdollisuudet[arpa];
                //arpa = arvoN(10)*10;
                // Arvotaan luku 7än kertotaulusta
                arpa = Math.round(Math.random() * 7 + 1) * 7;
                console.log(arpa)
                kysymys.tablettienKplNumeroina = kysymys.laakeKerroin * kysymys.paivaKerroin * arpa;
            // 
            }
            // Toiseksi Helpoin taso
            // Tablettien määrä = Rand(2,3)
            // Kesto = 10 * Tablettien määrä * Rand(1,2)
            // Eli vastauksista tulee kivoja
            else if( arpa === 3 ){ 
                kysymys.laakeKerroin = arvoN(2) + 1;
                kysymys.paivaKerroin = 1;
                //var antoMahdollisuudet = ["kerran päivässä","1x1","aamuisin","iltaisin"];
                //arpa = arvoN(antoMahdollisuudet.length) - 1; // arvotaan yksi ylemmistä
                //kysymys.antoAjanKohta = antoMahdollisuudet[arpa]; // asetetaan se
                var laakeMahdollisuudet = [50,100,200,400];
                arpa = arvoN(laakeMahdollisuudet.length) - 1;
                kysymys.tabletinVahvuus = laakeMahdollisuudet[arpa];
                //arpa = arvoN(10)*10;
                arpa = 10 * Math.round(Math.random() + 1) * kysymys.laakeKerroin;
                kysymys.tablettienKplNumeroina = kysymys.laakeKerroin * kysymys.paivaKerroin * arpa;
            }

            else if( arpa === 4 ){
                kysymys.laakeKerroin = 2;//arvoN(2) + arpa;
                kysymys.paivaKerroin = 2;//arvoN(2) + (1 - arpa);
                var laakeMahdollisuudet = [50,100,200,400];
                arpa = arvoN(laakeMahdollisuudet.length) - 1;
                kysymys.tabletinVahvuus = laakeMahdollisuudet[arpa];
                // Vastaukseksi tasakymmeniä 
                arpa = 10 * Math.round(Math.random() + 3) * kysymys.laakeKerroin;
                console.warn("Tabl.#:"+arpa)
                kysymys.tablettienKplNumeroina = kysymys.laakeKerroin * kysymys.paivaKerroin * arpa;
                
            }
            else if( arpa === 5) { // Annetaan kaksi kertaa päivässä 
                arpa = Math.round(Math.random()) // 0 tai 1
                kysymys.laakeKerroin = arvoN(2) + arpa;
                kysymys.paivaKerroin = arvoN(2) + (1 - arpa);
                //var antoMahdollisuudet = ["1x2","kahdesti päivässä","aamulla ja illalla"];
                //arpa = arvoN(antoMahdollisuudet.length) - 1;
                //kysymys.antoAjanKohta = antoMahdollisuudet[arpa];
                var laakeMahdollisuudet = [25,50,100];
                arpa = arvoN(laakeMahdollisuudet.length) - 1;
                kysymys.tabletinVahvuus = laakeMahdollisuudet[arpa];
                // Arvotaan luku 7än kertotaulusta
                arpa = 10 * Math.round(Math.random() + 1) * kysymys.laakeKerroin;
                kysymys.tablettienKplNumeroina = kysymys.laakeKerroin * kysymys.paivaKerroin * arpa;
            }
            else if( arpa === 6) {
                kysymys.laakeKerroin = arvoN(2);
                kysymys.paivaKerroin = 3;
                //var antoMahdollisuudet = ["kolme kertaa päivässä","1x3","kolmesti päivässä"];
                //arpa = arvoN(antoMahdollisuudet.length) - 1;
                //kysymys.antoAjanKohta = antoMahdollisuudet[arpa];
                var laakeMahdollisuudet = [100,200,300,400];
                arpa = arvoN(laakeMahdollisuudet.length) - 1;
                kysymys.tabletinVahvuus = laakeMahdollisuudet[arpa];
                //arpa = arvoN(5)*2 + 6;
                arpa = Math.round(Math.random() * 7 + 1) * 7;
                kysymys.tablettienKplNumeroina = kysymys.laakeKerroin * kysymys.paivaKerroin * arpa;
            }
            else if( arpa === 7) {
                kysymys.laakeKerroin = arvoN(2) + 1;
                kysymys.paivaKerroin = arvoN(2) + 1;
                //var antoMahdollisuudet = ["kolme kertaa päivässä","1x3","kolmesti päivässä"];
                //arpa = arvoN(antoMahdollisuudet.length) - 1;
                //kysymys.antoAjanKohta = antoMahdollisuudet[arpa];
                var laakeMahdollisuudet = [10,20,30,50];
                arpa = arvoN(laakeMahdollisuudet.length) - 1;
                kysymys.tabletinVahvuus = laakeMahdollisuudet[arpa];
                arpa = arvoN(5)*2 + 6;
                kysymys.tablettienKplNumeroina = kysymys.laakeKerroin * kysymys.paivaKerroin * arpa;
            }

            else{
                console.warn("Arpa saavutti kielletyn arvon:"+arpa);
            }

            // arvotaav sopiva teksti, päivässä, aamuin illoin, 1x2 jne
            arpa = arvoN(antoMahdollisuudet[kysymys.paivaKerroin].length) - 1;
            // asetetaan se
            kysymys.antoAjanKohta = antoMahdollisuudet[kysymys.paivaKerroin][arpa];

                
            if(varmistin > 50){
                return null;
            }
                varmistin++;
                console.log("Uusi:"+kysymys.vastaus())
                console.log("Vanha:"+edellinenVastaus)
        } while( kysymys.vastaus() === edellinenVastaus ) // jos tämä totta,niin mennään takaisin ylös 
            
     //   return kysymys;
    
    }    

    window.Kysymys.resepti = Kysymys;    
    console.log("Lisätään resepti");//+window.Kysymys.roomalaiset)

}(window));
  /*  
var arvoN = function(max){
    return Math.ceil(Math.random() * max);
}             
/*                     
    $scope.roomalaiset =[["","I","II","III","IV","V","VI","VII","VIII","IX"],               ["","X","XX","XXX","XL","L","LX","LXX","LXXX","XC"],
["","C","CC","CCC","CD","D","DC","DCC","DCCC","CM"]
]; 
    
    $scope.muunnaDesimaaleiksi = function(arvo){
        
     var roomalaiset =[["","I","II","III","IV","V","VI","VII","VIII","IX"],               ["","X","XX","XXX","XL","L","LX","LXX","LXXX","XC"],
["","C","CC","CCC","CD","D","DC","DCC","DCCC","CM"]
]; 
        
        
        var lukuTekstina = String(arvo);
  //      console.warn(lukuTekstina);
    var lukuTekstinaKaannettyna = lukuTekstina.reverse();
        var indexit = [];
        var indexit2 = []
        for(var i = 0; i < lukuTekstina.length; i++)
        {
indexit.push(lukuTekstinaKaannettyna[i]);
            indexit2.unshift(lukuTekstinaKaannettyna[i]);
    //        console.log(roomalaiset[i][lukuTekstinaKaannettyna[i]]);
      //      console.info(indexit.length);
        //     "14"
            
        }
        var valmis = "";
        var valmis2 = "";
        for(var i = 0; i < indexit.length;i++)
        {
            valmis = roomalaiset[i][indexit[i]] + valmis;
            //valmis
//            console.log($scope.roomalaiset[i][indexit[i]]);
        }
//        console.log(valmis);
        return {tulos:valmis,komponentit:indexit};
    };  // muunnaDesimmaleiksi-funktio loppuu
    
//    }; // funktio1 loppuu
}]); 

*/
</script>

</html>